YOW	•START
BRUH	•COMMENT_LINE
 Start Production Rule	•SINGLE_COMMENT
IN	•INPUT
x	•IDENTIFIER
OUT	•OUTPUT
"Hello World"	•CHARZ
OUT	•OUTPUT
"Value"	•CHARZ
+	•ARITHMETIC
num	•IDENTIFIER
NUMBR	•DATATYPE
x	•IDENTIFIER
x	•IDENTIFIER
=	•ASSIGNMENT
5	•NUMBR
num	•IDENTIFIER
=	•ASSIGNMENT
x	•IDENTIFIER
+	•ARITHMETIC
y	•IDENTIFIER
y	•IDENTIFIER
=	•ASSIGNMENT
8	•NUMBR
*	•ARITHMETIC
3	•NUMBR
/	•ARITHMETIC
4	•NUMBR
+	•ARITHMETIC
num	•IDENTIFIER
IF	•IF_STMT
(	•PAREN_OP
y	•IDENTIFIER
==	•EQUALITY
x	•IDENTIFIER
)	•PAREN_CL
OUT	•OUTPUT
y	•IDENTIFIER
IF	•IF_STMT
(	•PAREN_OP
x	•IDENTIFIER
<=	•RELATIONAL
5	•NUMBR
)	•PAREN_CL
{	•BRKT_OP
num	•IDENTIFIER
=	•ASSIGNMENT
x	•IDENTIFIER
}	•BRKT_CL
ELSE	•IF_NOT
y	•IDENTIFIER
=	•ASSIGNMENT
x	•IDENTIFIER
IF	•IF_STMT
(	•PAREN_OP
x	•IDENTIFIER
<=	•RELATIONAL
5	•NUMBR
)	•PAREN_CL
{	•BRKT_OP
num	•IDENTIFIER
=	•ASSIGNMENT
x	•IDENTIFIER
}	•BRKT_CL
ELF	•IF_ELSE
(	•PAREN_OP
y	•IDENTIFIER
!=	•EQUALITY
0	•NUMBR
)	•PAREN_CL
num	•IDENTIFIER
=	•ASSIGNMENT
y	•IDENTIFIER
ELSE	•IF_NOT
y	•IDENTIFIER
=	•ASSIGNMENT
x	•IDENTIFIER
FOR	•LOOP
(	•PAREN_OP
i	•IDENTIFIER
=	•ASSIGNMENT
0	•NUMBR
;	•SEPARATOR
i	•IDENTIFIER
<	•RELATIONAL
x	•IDENTIFIER
;	•SEPARATOR
i	•IDENTIFIER
++	•INCREMENT
)	•PAREN_CL
{	•BRKT_OP
x	•IDENTIFIER
+=	•ASSIGNMENT
y	•IDENTIFIER
y	•IDENTIFIER
=	•ASSIGNMENT
num	•IDENTIFIER
}	•BRKT_CL
BTWBRUH	•COMMENT

   End of code block
	•MULTILINE
CMT	•COMMENT_END
AIGHT	•END
YOW	•START
BRUH	•COMMENT_LINE
 Start Production Rule	•SINGLE_COMMENT
IN	•INPUT
x	•IDENTIFIER
OUT	•OUTPUT
"Hello World"	•CHARZ
OUT	•OUTPUT
"Value"	•CHARZ
+	•ARITHMETIC
num	•IDENTIFIER
NUMBR	•DATATYPE
x	•IDENTIFIER
x	•IDENTIFIER
=	•ASSIGNMENT
5	•NUMBR
num	•IDENTIFIER
=	•ASSIGNMENT
x	•IDENTIFIER
+	•ARITHMETIC
y	•IDENTIFIER
y	•IDENTIFIER
=	•ASSIGNMENT
8	•NUMBR
*	•ARITHMETIC
3	•NUMBR
/	•ARITHMETIC
4	•NUMBR
+	•ARITHMETIC
num	•IDENTIFIER
IF	•IF_STMT
(	•PAREN_OP
y	•IDENTIFIER
==	•EQUALITY
x	•IDENTIFIER
)	•PAREN_CL
OUT	•OUTPUT
y	•IDENTIFIER
IF	•IF_STMT
(	•PAREN_OP
x	•IDENTIFIER
<=	•RELATIONAL
5	•NUMBR
)	•PAREN_CL
{	•BRKT_OP
num	•IDENTIFIER
=	•ASSIGNMENT
x	•IDENTIFIER
}	•BRKT_CL
ELSE	•IF_NOT
y	•IDENTIFIER
=	•ASSIGNMENT
x	•IDENTIFIER
IF	•IF_STMT
(	•PAREN_OP
x	•IDENTIFIER
<=	•RELATIONAL
5	•NUMBR
)	•PAREN_CL
{	•BRKT_OP
num	•IDENTIFIER
=	•ASSIGNMENT
x	•IDENTIFIER
}	•BRKT_CL
ELF	•IF_ELSE
(	•PAREN_OP
y	•IDENTIFIER
!=	•EQUALITY
0	•NUMBR
)	•PAREN_CL
num	•IDENTIFIER
=	•ASSIGNMENT
y	•IDENTIFIER
ELSE	•IF_NOT
y	•IDENTIFIER
=	•ASSIGNMENT
x	•IDENTIFIER
FOR	•LOOP
(	•PAREN_OP
i	•IDENTIFIER
=	•ASSIGNMENT
0	•NUMBR
;	•SEPARATOR
i	•IDENTIFIER
<	•RELATIONAL
x	•IDENTIFIER
;	•SEPARATOR
i	•IDENTIFIER
++	•INCREMENT
)	•PAREN_CL
{	•BRKT_OP
x	•IDENTIFIER
+=	•ASSIGNMENT
y	•IDENTIFIER
y	•IDENTIFIER
=	•ASSIGNMENT
num	•IDENTIFIER
}	•BRKT_CL
BTWBRUH	•COMMENT

   End of code block
	•MULTILINE
CMT	•COMMENT_END
AIGHT	•END
